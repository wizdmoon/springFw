<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.labs.ex08.mybatis.hr.dao.IEmpRepository">

	<select id="getEmpCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM EMPLOYEES
        <if test="deptId != null">
             WHERE DEPARTMENT_ID = #{deptId}
        </if>
    </select>
    
    <resultMap id="empMap" type="app.labs.ex08.mybatis.hr.model.EmpVO">
        <result property="employeeId" column="EMPLOYEE_ID" />
        <result property="firstName" column="FIRST_NAME" />
        <result property="lastName" column="LAST_NAME" />
        <result property="email" column="EMAIL" />
        <result property="phoneNumber" column="PHONE_NUMBER" />
        <result property="hireDate" column="HIRE_DATE" />
        <result property="jobId" column="JOB_ID" />
        <result property="salary" column="SALARY" />
        <result property="commissionPct" column="COMMISSION_PCT" />
        <result property="managerId" column="MANAGER_ID" />
        <result property="departmentId" column="DEPARTMENT_ID" />
    </resultMap>
    
    <select id="getEmpList" resultMap="empMap">
    	SELECT * FROM EMPLOYEES
    </select>
    
    <select id="getEmpInfo" parameterType="int" resultType="app.labs.ex08.mybatis.hr.model.EmpVO">
        SELECT  EMPLOYEE_ID		AS    employeeId,
                FIRST_NAME		AS    firstName,
                LAST_NAME		AS    lastName,
                EMAIL			AS    email,
                PHONE_NUMBER	AS    phoneNumber,
                TO_CHAR(HIRE_DATE, 'yyyy-mm-dd')	AS	hireDate,
                JOB_ID			AS    jobId,
                SALARY			AS    salary,
                COMMISSION_PCT	AS    commissionPct,
                MANAGER_ID		AS    managerId,
                DEPARTMENT_ID	AS    departmentId
        FROM EMPLOYEES WHERE EMPLOYEE_ID = #{empId}
    </select>
    
    <insert id="insertEmp" parameterType="app.labs.ex08.mybatis.hr.model.EmpVO">
        INSERT INTO EMPLOYEES (
            EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER,
            HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
        VALUES (
            #{employeeId}, #{firstName}, #{lastName}, #{email}, #{phoneNumber},
            SYSDATE, #{jobId}, #{salary}, #{commissionPct}, #{managerId}, #{departmentId})
    </insert>
    
    <update id="updateEmp" parameterType="app.labs.ex08.mybatis.hr.model.EmpVO">
        UPDATE EMPLOYEES 
        SET FIRST_NAME=#{firstName}, LAST_NAME=#{lastName}, SALARY=#{salary} 
        WHERE EMPLOYEE_ID=#{employeeId}
    </update>
    
    <delete id="deleteEmp">
        DELETE FROM EMPLOYEES 
        WHERE EMPLOYEE_ID=#{empId} AND EMAIL=#{email}
    </delete>
    
    <delete id="deleteJobHistory" parameterType="int">
        DELETE FROM JOB_HISTORY 
        WHERE EMPLOYEE_ID=#{empId}
    </delete>
    
    <select id="getAllDeptId" resultType="hashmap">
        SELECT 
            DEPARTMENT_ID AS departmentId, 
            DEPARTMENT_NAME AS departmentName
        FROM DEPARTMENTS
    </select>
    
    <select id="getAllJobId" resultType="hashmap">
        SELECT JOB_ID AS jobId, JOB_TITLE AS jobTitle
        FROM JOBS
    </select>
    
    <select id="getAllManagerId" resultType="hashmap">
        SELECT DISTINCT
            D.MANAGER_ID AS manager_id, 
            E.FIRST_NAME AS manager_name 
        FROM DEPARTMENTS D JOIN EMPLOYEES E 
            ON D.MANAGER_ID = E.EMPLOYEE_ID
        ORDER BY D.MANAGER_ID
    </select>

</mapper>
